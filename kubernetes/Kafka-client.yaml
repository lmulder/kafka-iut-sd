kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-kafka-client
  labels:
    app: my-kafka-client
    app.kubernetes.io/component: my-kafka-client
    app.kubernetes.io/instance: my-kafka-client
    app.kubernetes.io/name: my-kafka-client
    app.kubernetes.io/part-of: kafka
    app.openshift.io/runtime: amq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-kafka-client
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: my-kafka-client
        deployment: my-kafka-client
    spec:
      volumes:
        - name: client-properties
          configMap:
            name: client-properties
            items:
              - key: client.properties
                path: client.properties
            defaultMode: 420
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: kafka-client
          command:
            - sleep
            - infinity
          ports:
            - containerPort: 9092
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: client-properties
              mountPath: /tmp
          terminationMessagePolicy: File
          image: 'docker.io/bitnami/kafka:3.9.0-debian-12-r4'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
